import { LitElement } from "lit";
import "./token-graph-node";
import "./token-graph-adjacency";
import { GraphNodeId, GraphState } from "../models/graph-model";
import { AppState } from "../models/app-model";
import { Gesture, GestureEvent } from "../utilities/index";
import "./graph-grid";
type AdjacencyTuplesList = [GraphNodeId, GraphNodeId][];
export declare class TokenGraph extends LitElement {
  appState: AppState;
  graphState: GraphState;
  nodeIds: GraphNodeId[];
  _priorComponentsCacheStr: string;
  _priorGraphState: GraphState;
  _gestureStartZoom: number;
  _isGestureActive: boolean;
  adjacencyTuples: AdjacencyTuplesList;
  gesture?: Gesture;
  debouncedAfterWheel: () => void;
  static styles: import("lit").CSSResult;
  constructor();
  willUpdate(changedProperties: Map<string, unknown>): void;
  handleZoomGestureEnd(e: any): void;
  handleZoomGestureStart(e: any): void;
  handleZoomGesture(e: any): void;
  _debouncedAfterWheel(): void;
  handleWheelEvents(e: any): void;
  handlePointerDown(e: PointerEvent): void;
  handleDragStart(e: GestureEvent): void;
  handleDragEnd(e: GestureEvent): void;
  handleDragMove(e: GestureEvent): void;
  render(): import("lit-html").TemplateResult<1>;
}
export {};
